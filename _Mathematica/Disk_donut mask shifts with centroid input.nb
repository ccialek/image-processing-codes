(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     38982,        898]
NotebookOptionsPosition[     36514,        851]
NotebookOutlinePosition[     36897,        868]
CellTagsIndexPosition[     36854,        865]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Calling the functions...", "Chapter",
 CellChangeTimes->{{3.751243618046979*^9, 
  3.751243629685884*^9}},ExpressionUUID->"56823997-d80c-4ef0-aa1a-\
e3d5e632253d"],

Cell[CellGroupData[{

Cell["\<\
12. MyDiskDonutMask VERSION1: Lots of inputs and flexibility...CHOOSE ONE\
\>", "Subsubsection",
 CellChangeTimes->{{3.7464496243784494`*^9, 3.7464496290851107`*^9}, {
   3.746451235258383*^9, 3.74645123548956*^9}, {3.750949132243795*^9, 
   3.7509491388134403`*^9}, {3.750950017616474*^9, 3.750950018408107*^9}, {
   3.750950049325511*^9, 3.750950052579129*^9}, {3.750951082292624*^9, 
   3.750951098440075*^9}, 
   3.7509513082353897`*^9},ExpressionUUID->"c4ca0d97-3ecd-43f8-9978-\
3622a2775ed6"],

Cell["Module Unit Test input : ", "Text",
 CellChangeTimes->{{3.750954857477921*^9, 
  3.750954876337336*^9}},ExpressionUUID->"97ed580c-6650-4ca7-a75d-\
2d80cb5a0b6c"],

Cell[BoxData[
 RowBox[{"(*", "  ", 
  RowBox[{"MyDiskDonutMask", "[", 
   RowBox[{"myPadSize", ",", "2", ",", " ", "5", ",", " ", "3"}], "]"}], 
  "   ", "*)"}]], "Input",
 CellChangeTimes->{{3.750954976325213*^9, 3.7509550360946207`*^9}},
 CellLabel->
  "In[442]:=",ExpressionUUID->"57125f8f-2d01-4b35-adb8-b1678d9316c9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MyDiskDonutMask", "::", "usage"}], "=", "\[IndentingNewLine]", 
    "\"\<Makes a disk and donut mask based on size constraints that the user \
provides. Output:  {\!\(\*GraphicsBox[TagBox[RasterBox[CompressedData[\"
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOmUkqSJIHiLkZRsHgAB/s
sdPUNo9S84eauYTMHwWEAAAJmCDx
\"], {{0, 12}, {11, 0}}, {0., 1.},ColorFunction->GrayLevel],BoxForm`ImageTag[\
\"Real\", ColorSpace -> Automatic, Interleaving -> \
None],Selectable->False],DefaultBaseStyle->\"ImageGraphics\",ImageSizeRaw->{\
11, 12},PlotRange->{{0, 11}, {0, \
12}}]\),\!\(\*GraphicsBox[TagBox[RasterBox[CompressedData[\"
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOmUkqSJIHiLkZhhv4YE8c
Ta559FJHqj5SzSNW/1A1d7jEM6Xpl3IAAIu1LfY=
\"], {{0, 12}, {11, 0}}, {0., 1.},ColorFunction->GrayLevel],BoxForm`ImageTag[\
\"Real\", ColorSpace -> Automatic, Interleaving -> \
None],Selectable->False],DefaultBaseStyle->\"ImageGraphics\",ImageSizeRaw->{\
11, 12},PlotRange->{{0, 11}, {0, 12}}]\)}\n\nInputs\n1. myPadSize: how big \
you want the crop to be. Should match the size of your crops.\n2. \
donutRadius: Diff Lim Spot, use 2 or 3\n3. diskWidth: Diff Lim Spot, use \
myPadSize unless you want a bigger/smaller disk\n4. diskRadius: use the \
donutRadius, unless you want a pixel gap between your disk and donut\n\>\""}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MyDiskDonutMask", "[", 
   RowBox[{
   "myPadSize_", ",", "donutRadius_", ",", "diskRadius_", ",", "diskWidth_"}],
    "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"mycent", ",", "mydonut"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"mycent", "=", 
      RowBox[{"Image", "[", 
       RowBox[{"DiskMatrix", "[", 
        RowBox[{"donutRadius", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"2", "*", "myPadSize"}], "+", "1"}], ",", 
           RowBox[{
            RowBox[{"2", "*", "myPadSize"}], "+", "1"}]}], "}"}]}], "]"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"mydonut", "=", 
      RowBox[{"Image", "[", 
       RowBox[{
        RowBox[{"DiskMatrix", "[", 
         RowBox[{"diskRadius", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"2", "*", "myPadSize"}], "+", "1"}], ",", 
            RowBox[{
             RowBox[{"2", "*", "myPadSize"}], "+", "1"}]}], "}"}]}], "]"}], 
        "-", 
        RowBox[{"DiskMatrix", "[", 
         RowBox[{"diskWidth", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"2", "*", "myPadSize"}], "+", "1"}], ",", 
            RowBox[{
             RowBox[{"2", "*", "myPadSize"}], "+", "1"}]}], "}"}]}], "]"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"mycent", ",", "mydonut"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.5750965858018923`*^9, 3.5750966952420454`*^9}, {
  3.5751516881187415`*^9, 3.5751517415788164`*^9}, {3.5787952659665294`*^9, 
  3.578795266902531*^9}, {3.746450618041257*^9, 3.7464506325390673`*^9}, {
  3.746451229341381*^9, 3.746451233024241*^9}, {3.7464512851329184`*^9, 
  3.746451476184409*^9}, {3.7494086106269345`*^9, 3.749408612465603*^9}, {
  3.7494786662825217`*^9, 3.7494786831055794`*^9}, {3.750949144621682*^9, 
  3.750949171539495*^9}, {3.750949202634305*^9, 3.7509492065697823`*^9}, {
  3.750949249498136*^9, 3.75094935832798*^9}, {3.7509495261099157`*^9, 
  3.7509497203736343`*^9}, {3.750949984139188*^9, 3.75095000820501*^9}, {
  3.75095052843073*^9, 3.7509509891151323`*^9}, {3.7509550061106987`*^9, 
  3.750955015093137*^9}},
 CellLabel->
  "In[443]:=",ExpressionUUID->"2c73ae9a-83fb-4154-80d6-ec601fbce1e8"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
12. MyDiskDonutMask VERSION2: LESSSSS inputs / flexibility...CHOOSE ONE\
\>", "Subsubsection",
 CellChangeTimes->{{3.7464496243784494`*^9, 3.7464496290851107`*^9}, {
  3.746451235258383*^9, 3.74645123548956*^9}, {3.750949132243795*^9, 
  3.7509491388134403`*^9}, {3.750950017616474*^9, 3.750950018408107*^9}, {
  3.750950049325511*^9, 3.750950052579129*^9}, {3.750951082292624*^9, 
  3.750951122460825*^9}, {3.750951299693718*^9, 
  3.750951303356394*^9}},ExpressionUUID->"e17ea100-f1e6-4a04-872b-\
816ec2e0c99e"],

Cell["Module Unit Test input : ", "Text",
 CellChangeTimes->{{3.750954857477921*^9, 
  3.750954876337336*^9}},ExpressionUUID->"ab3c44ca-a9e0-464d-ad47-\
451e91ca9b2b"],

Cell[BoxData[
 RowBox[{"(*", "  ", 
  RowBox[{"MyDiskDonutMask", "[", 
   RowBox[{"myPadSize", ",", "2"}], "]"}], "  ", "*)"}]], "Input",
 CellChangeTimes->{{3.750954951824719*^9, 3.750954953935198*^9}},
 CellLabel->
  "In[445]:=",ExpressionUUID->"cc56b660-a411-4c8e-90ab-b58bb3ce9627"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MyDiskDonutMask", "::", "usage"}], "=", "\[IndentingNewLine]", 
    "\"\<Makes a disk and donut mask based on size constraints that the user \
provides. Output:  {\!\(\*GraphicsBox[TagBox[RasterBox[CompressedData[\"
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOmUkqSJIHiLkZRsHgAB/s
sdPUNo9S84eauYTMHwWEAAAJmCDx
\"], {{0, 12}, {11, 0}}, {0., 1.},ColorFunction->GrayLevel],BoxForm`ImageTag[\
\"Real\", ColorSpace -> Automatic, Interleaving -> \
None],Selectable->False],DefaultBaseStyle->\"ImageGraphics\",ImageSizeRaw->{\
11, 12},PlotRange->{{0, 11}, {0, \
12}}]\),\!\(\*GraphicsBox[TagBox[RasterBox[CompressedData[\"
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOmUkqSJIHiLkZhhv4YE8c
Ta559FJHqj5SzSNW/1A1d7jEM6Xpl3IAAIu1LfY=
\"], {{0, 12}, {11, 0}}, {0., 1.},ColorFunction->GrayLevel],BoxForm`ImageTag[\
\"Real\", ColorSpace -> Automatic, Interleaving -> \
None],Selectable->False],DefaultBaseStyle->\"ImageGraphics\",ImageSizeRaw->{\
11, 12},PlotRange->{{0, 11}, {0, 12}}]\)}\n\nInputs\n1. myPadSize: how big \
you want the crop to be. Should match the size of your crops.\n2. \
donutRadius: Diff Lim Spot, use 2 or 3\n\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MyDiskDonutMask", "[", 
   RowBox[{"myPadSize_", ",", "donutRadius_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"mycent", ",", "mydonut"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"mycent", "=", 
      RowBox[{"Image", "[", 
       RowBox[{"DiskMatrix", "[", 
        RowBox[{"donutRadius", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"2", "*", "myPadSize"}], "+", "1"}], ",", 
           RowBox[{
            RowBox[{"2", "*", "myPadSize"}], "+", "1"}]}], "}"}]}], "]"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"mydonut", "=", 
      RowBox[{"Image", "[", 
       RowBox[{
        RowBox[{"DiskMatrix", "[", 
         RowBox[{"myPadSize", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"2", "*", "myPadSize"}], "+", "1"}], ",", 
            RowBox[{
             RowBox[{"2", "*", "myPadSize"}], "+", "1"}]}], "}"}]}], "]"}], 
        "-", 
        RowBox[{"DiskMatrix", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"donutRadius", "+", "1"}], ")"}], 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"without", " ", "added", " ", "1"}], ",", " ", 
            RowBox[{
            "the", " ", "donut", " ", "will", " ", "exactly", " ", "nest", 
             " ", "within", " ", "the", " ", 
             RowBox[{"disk", ".", " ", "However"}]}], ",", " ", 
            RowBox[{
            "adding", " ", "1", " ", "here", " ", "adds", " ", "a", " ", "1", 
             " ", "pixel", " ", "pad", " ", "to", " ", "acount", " ", "for", 
             " ", "residual", " ", "brightness", " ", "from", " ", "the", " ", 
             RowBox[{"DLS", "'"}], "s", " ", "tails", " ", "of", " ", "the", 
             " ", "gaussian"}]}], "*)"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"2", "*", "myPadSize"}], "+", "1"}], ",", 
            RowBox[{
             RowBox[{"2", "*", "myPadSize"}], "+", "1"}]}], "}"}]}], "]"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"mycent", ",", "mydonut"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.5750965858018923`*^9, 3.5750966952420454`*^9}, {
  3.5751516881187415`*^9, 3.5751517415788164`*^9}, {3.5787952659665294`*^9, 
  3.578795266902531*^9}, {3.746450618041257*^9, 3.7464506325390673`*^9}, {
  3.746451229341381*^9, 3.746451233024241*^9}, {3.7464512851329184`*^9, 
  3.746451476184409*^9}, {3.7494086106269345`*^9, 3.749408612465603*^9}, {
  3.7494786662825217`*^9, 3.7494786831055794`*^9}, {3.750949144621682*^9, 
  3.750949171539495*^9}, {3.750949202634305*^9, 3.7509492065697823`*^9}, {
  3.750949249498136*^9, 3.75094935832798*^9}, {3.7509495261099157`*^9, 
  3.7509497203736343`*^9}, {3.750949984139188*^9, 3.75095000820501*^9}, {
  3.75095052843073*^9, 3.7509509891151323`*^9}, {3.750951130191716*^9, 
  3.750951285153647*^9}},
 CellLabel->
  "In[446]:=",ExpressionUUID->"acb7364b-e8a6-4bd9-ac24-b9d2b9052a37"]
}, Closed]],

Cell[CellGroupData[{

Cell["13. MyDiskDonutCentered", "Subsubsection",
 CellChangeTimes->{{3.7464496243784494`*^9, 3.7464496290851107`*^9}, {
  3.746451235258383*^9, 3.74645123548956*^9}, {3.750949132243795*^9, 
  3.7509491388134403`*^9}, {3.750950512193235*^9, 3.750950512888213*^9}, {
  3.750951457307918*^9, 
  3.75095145745465*^9}},ExpressionUUID->"582737df-7eeb-49c3-a878-\
448b5755e435"],

Cell["Module Unit Test input : ", "Text",
 CellChangeTimes->{{3.750954857477921*^9, 
  3.750954876337336*^9}},ExpressionUUID->"67d154dd-6a2c-432c-9e32-\
2f3543c6d5df"],

Cell[BoxData[
 RowBox[{"(*", "  ", 
  RowBox[{"MyDiskDonutCentered", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "5"}], ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOmUkqSJIHiLkZRsHgAB/s
sdPUNo9S84eauYTMHwWEAAAJmCDx
         "], {{0, 12}, {11, 0}}, {0., 1.},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Real", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{11, 12},
       PlotRange->{{0, 11}, {0, 12}}], ",", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOmUkqSJIHiLkZhhv4YE8c
Ta559FJHqj5SzSNW/1A1d7jEM6Xpl3IAAIu1LfY=
         "], {{0, 12}, {11, 0}}, {0.,
          1.},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Real", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{11, 12},
       PlotRange->{{0, 11}, {0, 12}}]}], "}"}]}], "]"}], "  ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.750955060199387*^9, 3.7509551190982122`*^9}},
 CellLabel->
  "In[448]:=",ExpressionUUID->"5acf05c7-ead8-4c37-bc70-9c327c6ff172"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MyDiskDonutCentered", "::", "usage"}], "=", 
    "\[IndentingNewLine]", 
    "\"\<Uses masks for the disk and donut, \
{\!\(\*GraphicsBox[TagBox[RasterBox[CompressedData[\"
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOmUkqSJIHiLkZRsHgAB/s
sdPUNo9S84eauYTMHwWEAAAJmCDx
\"], {{0, 12}, {11, 0}}, {0., 1.},ColorFunction->GrayLevel],BoxForm`ImageTag[\
\"Real\", ColorSpace -> Automatic, Interleaving -> \
None],Selectable->False],DefaultBaseStyle->\"ImageGraphics\",ImageSizeRaw->{\
11, 12},PlotRange->{{0, 11}, {0, \
12}}]\),\!\(\*GraphicsBox[TagBox[RasterBox[CompressedData[\"
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOmUkqSJIHiLkZhhv4YE8c
Ta559FJHqj5SzSNW/1A1d7jEM6Xpl3IAAIu1LfY=
\"], {{0, 12}, {11, 0}}, {0., 1.},ColorFunction->GrayLevel],BoxForm`ImageTag[\
\"Real\", ColorSpace -> Automatic, Interleaving -> \
None],Selectable->False],DefaultBaseStyle->\"ImageGraphics\",ImageSizeRaw->{\
11, 12},PlotRange->{{0, 11}, {0, 12}}]\)}, then pads them to center them \
around the centroid, such as this: \
{\!\(\*GraphicsBox[TagBox[RasterBox[CompressedData[\"
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOmUkqSFIMiAUZRsEoGAWj
YBSMglEweMAHe+z0QNtPb/eMuoM094yC4Q4A5vchAQ==
\"], {{0, 22}, {17, 0}}, {0., 1.},ColorFunction->GrayLevel],BoxForm`ImageTag[\
\"Real\", ColorSpace -> Automatic, Interleaving -> \
None],Selectable->False],DefaultBaseStyle->\"ImageGraphics\",ImageSizeRaw->{\
17, 22},PlotRange->{{0, 17}, {0, \
22}}]\),\!\(\*GraphicsBox[TagBox[RasterBox[CompressedData[\"
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOmUkqSFIMiAUZRsEoGAWj
YBSMgoEAH+yJo+llP6XqaGU/rd1DqTmj7qCtOwY6fZBq7kDlX3qXH/QHAA+k
LgY=
\"], {{0, 22}, {17, 0}}, {0., 1.},ColorFunction->GrayLevel],BoxForm`ImageTag[\
\"Real\", ColorSpace -> Automatic, Interleaving -> \
None],Selectable->False],DefaultBaseStyle->\"ImageGraphics\",ImageSizeRaw->{\
17, 22},PlotRange->{{0, 17}, {0, 22}}]\)}. \n\nInputs\n1. centroid {x,y}, \
ex.:  {-1,1} \n2. masks {disk,donut}, ex.:  \
{\!\(\*GraphicsBox[TagBox[RasterBox[CompressedData[\"
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOmUkqSJIHiLkZRsHgAB/s
sdPUNo9S84eauYTMHwWEAAAJmCDx
\"], {{0, 12}, {11, 0}}, {0., 1.},ColorFunction->GrayLevel],BoxForm`ImageTag[\
\"Real\", ColorSpace -> Automatic, Interleaving -> \
None],Selectable->False],DefaultBaseStyle->\"ImageGraphics\",ImageSizeRaw->{\
11, 12},PlotRange->{{0, 11}, {0, \
12}}]\),\!\(\*GraphicsBox[TagBox[RasterBox[CompressedData[\"
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOmUkqSJIHiLkZhhv4YE8c
Ta559FJHqj5SzSNW/1A1d7jEM6Xpl3IAAIu1LfY=
\"], {{0, 12}, {11, 0}}, {0., 1.},ColorFunction->GrayLevel],BoxForm`ImageTag[\
\"Real\", ColorSpace -> Automatic, Interleaving -> \
None],Selectable->False],DefaultBaseStyle->\"ImageGraphics\",ImageSizeRaw->{\
11, 12},PlotRange->{{0, 11}, {0, 12}}]\)}\n\>\""}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "THIS", " ", "FXN", " ", "uses", " ", "a", " ", "centroid", " ", "input", 
     " ", "as", " ", "g", " ", "and", " ", "h"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"INSTEAD", " ", "OF", " ", 
        RowBox[{"{", 
         RowBox[{"g", ",", "h"}], "}"}]}], " ", "..."}], " ", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"MyDiskDonutCentered", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"g_", ",", "h_"}], "}"}], ",", "myDiskDonut_"}], "]"}]}], 
     " ", ":=", "\[IndentingNewLine]", " ", 
     RowBox[{"Which", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"g", "\[LessEqual]", " ", "0"}], " ", "&&", " ", 
        RowBox[{"h", "\[GreaterEqual]", " ", "0"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ImagePad", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{
                RowBox[{"-", "2"}], "g"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"2", "h"}]}], "}"}]}], "}"}]}], "]"}], "&"}], "/@", 
        "myDiskDonut"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"g", "\[LessEqual]", "0"}], " ", "&&", " ", 
        RowBox[{"h", "\[LessEqual]", "0"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ImagePad", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{
                RowBox[{"-", "2"}], "g"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], "h"}], ",", "0"}], "}"}]}], "}"}]}], 
          "]"}], "&"}], "/@", "myDiskDonut"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"g", "\[GreaterEqual]", "0"}], " ", "&&", " ", 
        RowBox[{"h", "\[GreaterEqual]", "0"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ImagePad", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"2", "g"}], ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"2", "h"}]}], "}"}]}], "}"}]}], "]"}], "&"}], "/@", 
        "myDiskDonut"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"g", "\[GreaterEqual]", "0"}], " ", "&&", " ", 
        RowBox[{"h", "\[LessEqual]", "0"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ImagePad", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"2", "g"}], ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], "h"}], ",", "0"}], "}"}]}], "}"}]}], 
          "]"}], "&"}], "/@", "myDiskDonut"}]}], "\[IndentingNewLine]", 
      "]"}]}]}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MyDiskDonutCentered", "[", 
   RowBox[{"centroid_", ",", "myDiskDonut_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"g", ",", "h"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"g", ",", "h"}], "}"}], " ", "=", " ", "centroid"}], "  ", ";",
      "\[IndentingNewLine]", 
     RowBox[{"Which", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"g", "\[LessEqual]", " ", "0"}], " ", "&&", " ", 
        RowBox[{"h", "\[GreaterEqual]", " ", "0"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ImagePad", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"2", "g"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "h"}], "}"}]}], "}"}]}], "]"}], "&"}], "/@", 
        "myDiskDonut"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"g", "\[LessEqual]", "0"}], " ", "&&", " ", 
        RowBox[{"h", "\[LessEqual]", "0"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ImagePad", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"-", "g"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "h"}], ",", "0"}], "}"}]}], "}"}]}], "]"}], "&"}],
         "/@", "myDiskDonut"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"g", "\[GreaterEqual]", "0"}], " ", "&&", " ", 
        RowBox[{"h", "\[GreaterEqual]", "0"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ImagePad", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"g", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "h"}], "}"}]}], "}"}]}], "]"}], "&"}], "/@", 
        "myDiskDonut"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"g", "\[GreaterEqual]", "0"}], " ", "&&", " ", 
        RowBox[{"h", "\[LessEqual]", "0"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ImagePad", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"g", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "h"}], ",", "0"}], "}"}]}], "}"}]}], "]"}], "&"}],
         "/@", "myDiskDonut"}]}], "\[IndentingNewLine]", "]"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.5750965858018923`*^9, 3.5750966952420454`*^9}, {
  3.5751516881187415`*^9, 3.5751517415788164`*^9}, {3.5787952659665294`*^9, 
  3.578795266902531*^9}, {3.746450618041257*^9, 3.7464506325390673`*^9}, {
  3.746451229341381*^9, 3.746451233024241*^9}, {3.7464512851329184`*^9, 
  3.746451476184409*^9}, {3.7494086106269345`*^9, 3.749408612465603*^9}, {
  3.7494786662825217`*^9, 3.7494786831055794`*^9}, {3.750949144621682*^9, 
  3.750949171539495*^9}, {3.750949202634305*^9, 3.7509492065697823`*^9}, {
  3.750949249498136*^9, 3.75094935832798*^9}, {3.7509495261099157`*^9, 
  3.7509497203736343`*^9}, {3.750950083209612*^9, 3.750950101374525*^9}, {
  3.751244825867087*^9, 
  3.7512448342795677`*^9}},ExpressionUUID->"94b9bc56-dd73-4ab5-9347-\
d419a2eb19ed"]
}, Open  ]],

Cell["\<\
pre-14. \t\tDo we want to make a function to get rid of any crops with \
centers that are too far from {0,0}? \
\>", "Subsubsection",
 CellChangeTimes->{{3.7464496243784494`*^9, 3.7464496290851107`*^9}, {
   3.746451235258383*^9, 3.74645123548956*^9}, {3.750949132243795*^9, 
   3.7509491388134403`*^9}, {3.750950017616474*^9, 3.750950018408107*^9}, {
   3.750950049325511*^9, 3.750950052579129*^9}, 3.750951542405332*^9, {
   3.750951607120916*^9, 3.750951698469619*^9}, {3.750951739435706*^9, 
   3.750951769329777*^9}, {3.750951806956396*^9, 3.7509518489449253`*^9}, {
   3.750955322410428*^9, 3.7509553536927347`*^9}, {3.7509561812953777`*^9, 
   3.750956191599815*^9}},ExpressionUUID->"74c1f778-8c2a-4910-bee8-\
988c5af62b87"],

Cell[CellGroupData[{

Cell["\<\
14. My PUT IT TOGETHER... take a line of output, make masks, center masks via \
padding, then calculate mask area, multiply mask x crop, then calculate mean \
intensity, THEN... ahh fuckin finally, export the mean intensity, like just \
{number}\
\>", "Subsubsection",
 CellChangeTimes->{{3.7464496243784494`*^9, 3.7464496290851107`*^9}, {
   3.746451235258383*^9, 3.74645123548956*^9}, {3.750949132243795*^9, 
   3.7509491388134403`*^9}, {3.750950017616474*^9, 3.750950018408107*^9}, {
   3.750950049325511*^9, 3.750950052579129*^9}, 3.750951542405332*^9, {
   3.750951607120916*^9, 3.750951698469619*^9}, {3.750951739435706*^9, 
   3.750951769329777*^9}, {3.750951806956396*^9, 
   3.7509518489449253`*^9}},ExpressionUUID->"7e415811-0192-4877-8a52-\
8e1e3ee3d1d9"],

Cell["Module Unit Test input : ", "Text",
 CellChangeTimes->{{3.750954857477921*^9, 
  3.750954876337336*^9}},ExpressionUUID->"d016a72e-47ac-49ba-afcc-\
2628581146f4"],

Cell[BoxData[
 RowBox[{"(*", "  ", 
  RowBox[{"MyPutItTogether", "[", 
   RowBox[{"5", ",", "2", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
    GraphicsBox[
     TagBox[
      RasterBox[
       RawArray["UnsignedInteger16",{{5760, 10737, 2839, 16415, 3168, 18760, 
        11889, 6418, 6953, 14851, 9503}, {3991, 11725, 9215, 18348, 453, 3332,
         3044, 4032, 6582, 987, 9544}, {3209, 12054, 5184, 8475, 8968, 14604, 
        2057, 11437, 10532, 0, 4155}, {9709, 12753, 13041, 26864, 12835, 
        11972, 9133, 9421, 6788, 9915, 1810}, {16579, 11601, 15839, 4813, 
        15016, 13123, 7734, 6706, 4813, 4937, 8022}, {15592, 8763, 23161, 
        9133, 31430, 26905, 16785, 2921, 23861, 17896, 13576}, {15880, 15921, 
        34804, 46076, 22709, 23079, 14275, 11149, 10943, 10820, 6418}, {15345,
         23367, 59282, 58377, 49573, 13288, 26741, 9503, 22380, 8063, 3044}, {
        38383, 17279, 61709, 65535, 60927, 38918, 14604, 18636, 9174, 21434, 
        9668}, {10573, 35339, 42744, 39288, 54715, 22092, 20076, 23161, 14070,
         13946, 8392}, {14481, 12013, 7076, 22256, 13987, 25218, 9380, 14070, 
        23285, 13987, 11313}}], {{0, 11}, {11, 0}}, {0, 65535},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Bit16", ColorSpace -> "Grayscale", Interleaving -> None, 
       MetaInformation -> 
       Association[
        "Exif" -> Association[
          "NewSubfileType" -> "Primary image", "ImageWidth" -> 512, 
           "ImageLength" -> 512, "BitsPerSample" -> 16, 
           "PhotometricInterpretation" -> "Black Is Zero", "ImageDescription" -> 
           "ImageJ=1.52d\nimages=195\nchannels=3\nframes=65\nhyperstack=true\n\
mode=composite\nloop=false\nmin=693.0\nmax=2401.0", "StripOffsets" -> 2659, 
           "SamplesPerPixel" -> 1, "RowsPerStrip" -> 512, "StripByteCounts" -> 
           524288]]],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{11, 11},
     PlotRange->{{0, 11}, {0, 11}}]}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.750954824245982*^9, 3.750954888919532*^9}},
 CellLabel->
  "In[451]:=",ExpressionUUID->"5bbbefea-6c48-4c21-ac61-e82b07573c21"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MyPutItTogether", "::", "usage"}], "=", "\[IndentingNewLine]", 
    "\"\<Determines the Mean Intensity of a spot in a crop.\n\nInputs\n1. \
myPadSize: how big you want the crop to be. Should match the size of your \
crops.\n2. myDonutRadius: Diff Lim Spot, use 2 or 3\n3. myCentroid_: should \
be a list of coordinates for centroid, can be found in output of the \
FindParticlesInCrop function ex.: {-2,3}\n4. myCrop: a crop of a spot \
ex.:\!\(\*GraphicsBox[TagBox[RasterBox[RawArray[\"UnsignedInteger16\",{{5760, \
10737, 2839, 16415, 3168, 18760, 11889, 6418, 6953, 14851, 9503}, {3991, \
11725, 9215, 18348, 453, 3332, 3044, 4032, 6582, 987, 9544}, {3209, 12054, \
5184, 8475, 8968, 14604, 2057, 11437, 10532, 0, 4155}, {9709, 12753, 13041, \
26864, 12835, 11972, 9133, 9421, 6788, 9915, 1810}, {16579, 11601, 15839, \
4813, 15016, 13123, 7734, 6706, 4813, 4937, 8022}, {15592, 8763, 23161, 9133, \
31430, 26905, 16785, 2921, 23861, 17896, 13576}, {15880, 15921, 34804, 46076, \
22709, 23079, 14275, 11149, 10943, 10820, 6418}, {15345, 23367, 59282, 58377, \
49573, 13288, 26741, 9503, 22380, 8063, 3044}, {38383, 17279, 61709, 65535, \
60927, 38918, 14604, 18636, 9174, 21434, 9668}, {10573, 35339, 42744, 39288, \
54715, 22092, 20076, 23161, 14070, 13946, 8392}, {14481, 12013, 7076, 22256, \
13987, 25218, 9380, 14070, 23285, 13987, 11313}}], {{0, 11}, {11, 0}}, {0, \
65535},ColorFunction->GrayLevel],BoxForm`ImageTag[\"Bit16\", ColorSpace -> \
\"Grayscale\", Interleaving -> None, MetaInformation -> Association[\"Exif\" \
-> Association[\"NewSubfileType\" -> \"Primary image\", \"ImageWidth\" -> \
512, \"ImageLength\" -> 512, \"BitsPerSample\" -> 16, \
\"PhotometricInterpretation\" -> \"Black Is Zero\", \"ImageDescription\" -> \
\"ImageJ=1.52dimages=195channels=3frames=65hyperstack=truemode=compositeloop=\
falsemin=693.0max=2401.0\", \"StripOffsets\" -> 2659, \"SamplesPerPixel\" -> \
1, \"RowsPerStrip\" -> 512, \"StripByteCounts\" -> \
524288]]],Selectable->False],DefaultBaseStyle->\"ImageGraphics\",ImageSizeRaw-\
>{11, 11},PlotRange->{{0, 11}, {0, 11}}]\)\n\>\""}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MyPutItTogether", "[", 
   RowBox[{
   "myPadSize_", ",", "myDonutRadius_", ",", " ", "myCentroid_", ",", 
    "myCrop_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "masks", ",", "blank", ",", " ", "centeredMasks", ",", "masksizes", ",", 
      "mymaskedcrops", ",", "meanIntensities", ",", "meanBGintensity"}], 
     "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"masks", " ", "=", " ", 
      RowBox[{"MyDiskDonutMask", "[", 
       RowBox[{"myPadSize", ",", "myDonutRadius"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"blank", "=", " ", 
      RowBox[{"Image", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{"1", ",", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"myPadSize", "*", "2"}], "+", "1"}], ")"}]}], "]"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"myPadSize", "*", "2"}], "+", "1"}], ")"}]}], "]"}], 
       "]"}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "creates", " ", "a", " ", "maks", " ", "image", " ", "the", " ", 
        "size", " ", "of", " ", "myCrop", " ", 
        RowBox[{"that", "'"}], "s", " ", "just", " ", "1.", "s"}], ",", " ", 
       RowBox[{
       "to", " ", "adjust", " ", "the", " ", "size", " ", "of", " ", "the", 
        " ", "masks", " ", "so", " ", "we", " ", "can", " ", "get", " ", "an",
         " ", "accurate", " ", "white", " ", "pixel", " ", "count"}]}], " ", 
      "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"centeredMasks", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"ImageMultiply", "[", 
         RowBox[{"blank", ",", "#"}], "]"}], "&"}], "/@", 
       RowBox[{"MyDiskDonutCentered", "[", 
        RowBox[{"myCentroid", ",", "masks"}], "]"}]}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{
      "these", " ", "centered", " ", "masks", " ", "now", " ", "look", " ", 
       "like", " ", 
       RowBox[{"this", ":", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           GraphicsBox[
            TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOmUkqSJIbikfBSAIf7LHT
1DaPUvOHmrmEzKc9AACYriDw
              "], {{0, 11}, {11, 0}}, {0., 1.},
              ColorFunction->GrayLevel],
             BoxForm`ImageTag[
             "Real", ColorSpace -> Automatic, Interleaving -> None],
             Selectable->False],
            DefaultBaseStyle->"ImageGraphics",
            ImageSizeRaw->{11, 11},
            PlotRange->{{0, 11}, {0, 11}}], ",", 
           GraphicsBox[
            TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOmUkqSJIbioc3+GBPHE1t
84g1n1L1lJqHSz+p9pILhrq51Apfcs1HqAMAOlMysQ==
              "], {{0, 11}, {11, 
              0}}, {0., 1.},
              ColorFunction->GrayLevel],
             BoxForm`ImageTag[
             "Real", ColorSpace -> Automatic, Interleaving -> None],
             Selectable->False],
            DefaultBaseStyle->"ImageGraphics",
            ImageSizeRaw->{11, 11},
            PlotRange->{{0, 11}, {0, 11}}]}], "}"}], " ", "with", " ", 
         "image", " ", "dimensions", " ", "of", " ", "myCrop"}]}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"masksizes", " ", "=", "  ", 
      RowBox[{
       RowBox[{
        RowBox[{"Count", "[", 
         RowBox[{
          RowBox[{"Flatten", "@", 
           RowBox[{"ImageData", "[", "#", "]"}]}], ",", "1."}], "]"}], "&"}], 
       "/@", "centeredMasks"}]}], " ", ";", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "counts", " ", "nonzero", " ", "pixels", " ", "in", " ", "masks"}], 
       ",", " ", 
       RowBox[{
       "which", " ", "correspond", " ", "to", " ", "pixel", " ", "size", " ", 
        "of", " ", "masks"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"mymaskedcrops", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"ImageMultiply", "[", 
         RowBox[{"myCrop", ",", "#"}], "]"}], "&"}], "/@", 
       "centeredMasks"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"meanIntensities", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Total", "[", 
          RowBox[{"Flatten", "@", 
           RowBox[{"ImageData", "[", 
            RowBox[{"mymaskedcrops", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], "/", 
         RowBox[{"masksizes", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "@", "mymaskedcrops"}], ",", "1"}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"meanBGintensity", " ", "=", "  ", 
      RowBox[{
       RowBox[{
       "meanIntensities", "\[LeftDoubleBracket]", "1", 
        "\[RightDoubleBracket]"}], "-", 
       RowBox[{
       "meanIntensities", "\[LeftDoubleBracket]", "2", 
        "\[RightDoubleBracket]"}]}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdyksowwEAx/E1WprDyJJmB2uLKFlKGJb/nGjJ/pTSvOZRLI/FQnnsYKsZ
GwnbRR5LM9nBQViTUsqQ2UFcyGtmwyQJKf6//+HXp199BaousoXJYDD41CBv
NX/xYylEnO8+uqD7OMrIWQ4RTv2GBZ6+SBeYzhBhvFHS/iiIucOnMMEujrdB
67PzDs4cpNzDq2J7CLoCeqaX8pJT9dwRCRN5ATOtml0qmKQMNjQJof8+QVj3
HiZMJZpUKJFXZUBHgZ/W/ZYlhr5hbxHsHN0n6f8Rq6b73uhxqLGwLDDbsD5Q
T6kyWM3QUZY+DQej+LNwTLS1BF8rbSuwXVQb10B5Jp1KhPyYPiEUa005UPmg
k8DmQo8Mssx2Ofy85ilgkuurGib39CthoCbSCnUktxumlI8Mwba/dhPkVezY
4ObJLe1Fpm8NSrURL/Tkpvng9xMZhNu/e9xGSjLCFME61tEElLHnzfAfggn7
FA==
  "],
 CellLabel->
  "In[452]:=",ExpressionUUID->"e5cb3d74-c03b-4b11-8bd7-890c216cdaf5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["15. nextFxn... ", "Subsubsection",
 CellChangeTimes->{{3.7464496243784494`*^9, 3.7464496290851107`*^9}, {
   3.746451235258383*^9, 3.74645123548956*^9}, {3.750949132243795*^9, 
   3.7509491388134403`*^9}, {3.750950017616474*^9, 3.750950018408107*^9}, {
   3.750950049325511*^9, 3.750950052579129*^9}, 3.750951542405332*^9, {
   3.750951607120916*^9, 3.750951698469619*^9}, {3.750951739435706*^9, 
   3.750951769329777*^9}, {3.750951806956396*^9, 
   3.75095187507932*^9}},ExpressionUUID->"6a5b5b1f-2ba8-4e01-b7c1-\
76d16406d89b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Myfxnd", "::", "usage"}], "=", "\[IndentingNewLine]", 
    "\"\<stuff\n\nInputs\n1. stuff\n\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Mynext", " ", 
   RowBox[{"fxn", "[", "]"}]}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ","}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.5750965858018923`*^9, 3.5750966952420454`*^9}, {
  3.5751516881187415`*^9, 3.5751517415788164`*^9}, {3.5787952659665294`*^9, 
  3.578795266902531*^9}, {3.746450618041257*^9, 3.7464506325390673`*^9}, {
  3.746451229341381*^9, 3.746451233024241*^9}, {3.7464512851329184`*^9, 
  3.746451476184409*^9}, {3.7494086106269345`*^9, 3.749408612465603*^9}, {
  3.7494786662825217`*^9, 3.7494786831055794`*^9}, {3.750949144621682*^9, 
  3.750949171539495*^9}, {3.750949202634305*^9, 3.7509492065697823`*^9}, {
  3.750949249498136*^9, 3.75094935832798*^9}, {3.7509495261099157`*^9, 
  3.7509497203736343`*^9}, {3.750949984139188*^9, 3.75095000820501*^9}, {
  3.750956116194169*^9, 
  3.750956128275517*^9}},ExpressionUUID->"b3495704-3a68-4144-8c1f-\
8c1360250d0f"]
}, Closed]]
}, Open  ]],

Cell["Testing out the funcitons... ", "Chapter",
 CellChangeTimes->{{3.751243609774344*^9, 
  3.751243613510043*^9}},ExpressionUUID->"e471316b-1a3c-4463-bba8-\
0ffc6c889496"]
},
WindowSize->{835, 604},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
Magnification:>0.75 Inherited,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 169, 3, 52, "Chapter",ExpressionUUID->"56823997-d80c-4ef0-aa1a-e3d5e632253d"],
Cell[CellGroupData[{
Cell[774, 29, 508, 9, 34, "Subsubsection",ExpressionUUID->"c4ca0d97-3ecd-43f8-9978-3622a2775ed6"],
Cell[1285, 40, 167, 3, 14, "Text",ExpressionUUID->"97ed580c-6650-4ca7-a75d-2d80cb5a0b6c"],
Cell[1455, 45, 322, 7, 12, "Input",ExpressionUUID->"57125f8f-2d01-4b35-adb8-b1678d9316c9"],
Cell[1780, 54, 3821, 82, 167, "Input",ExpressionUUID->"2c73ae9a-83fb-4154-80d6-ec601fbce1e8"]
}, Closed]],
Cell[CellGroupData[{
Cell[5638, 141, 523, 9, 29, "Subsubsection",ExpressionUUID->"e17ea100-f1e6-4a04-872b-816ec2e0c99e"],
Cell[6164, 152, 167, 3, 14, "Text",ExpressionUUID->"ab3c44ca-a9e0-464d-ad47-451e91ca9b2b"],
Cell[6334, 157, 286, 6, 12, "Input",ExpressionUUID->"cc56b660-a411-4c8e-90ab-b58bb3ce9627"],
Cell[6623, 165, 4356, 93, 167, "Input",ExpressionUUID->"acb7364b-e8a6-4bd9-ac24-b9d2b9052a37"]
}, Closed]],
Cell[CellGroupData[{
Cell[11016, 263, 371, 6, 29, "Subsubsection",ExpressionUUID->"582737df-7eeb-49c3-a878-448b5755e435"],
Cell[11390, 271, 167, 3, 27, "Text",ExpressionUUID->"67d154dd-6a2c-432c-9e32-2f3543c6d5df"],
Cell[11560, 276, 1347, 37, 30, "Input",ExpressionUUID->"5acf05c7-ead8-4c37-bc70-9c327c6ff172"],
Cell[12910, 315, 9732, 230, 605, "Input",ExpressionUUID->"94b9bc56-dd73-4ab5-9347-d419a2eb19ed"]
}, Open  ]],
Cell[22657, 548, 741, 12, 34, "Subsubsection",ExpressionUUID->"74c1f778-8c2a-4910-bee8-988c5af62b87"],
Cell[CellGroupData[{
Cell[23423, 564, 776, 13, 49, "Subsubsection",ExpressionUUID->"7e415811-0192-4877-8a52-8e1e3ee3d1d9"],
Cell[24202, 579, 167, 3, 27, "Text",ExpressionUUID->"d016a72e-47ac-49ba-afcc-2628581146f4"],
Cell[24372, 584, 2210, 42, 30, "Input",ExpressionUUID->"5bbbefea-6c48-4c21-ac61-e82b07573c21"],
Cell[26585, 628, 7968, 175, 494, "Input",ExpressionUUID->"e5cb3d74-c03b-4b11-8bd7-890c216cdaf5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34590, 808, 535, 8, 34, "Subsubsection",ExpressionUUID->"6a5b5b1f-2ba8-4e01-b7c1-76d16406d89b"],
Cell[35128, 818, 1181, 24, 83, "Input",ExpressionUUID->"b3495704-3a68-4144-8c1f-8c1360250d0f"]
}, Closed]]
}, Open  ]],
Cell[36336, 846, 174, 3, 52, "Chapter",ExpressionUUID->"e471316b-1a3c-4463-bba8-0ffc6c889496"]
}
]
*)

